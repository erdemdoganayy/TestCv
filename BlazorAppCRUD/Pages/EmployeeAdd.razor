@page "/EmployeeAdd"
@using BlazorAppCRUD.Data
@using BlazorAppCRUD.Persistence
@using Microsoft.EntityFrameworkCore
@inject IEmployeeService _employeeService
@inject IEducationService _educationService
@inject IApplicationDbContext _context


<h3>EmployeeAdd</h3>
@if (objEmp == null)
{
    <p>
        <em>
            Loading...
        </em>
    </p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>City. (C)</th>
                <th>Country. (F)</th>
                <th>Gender</th>
                <th>Village</th>
                <th>Age</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var emp in objEmp)
            {
                <tr>
                    <td>@emp.Name</td>
                    <td>@emp.City</td>
                    <td>@emp.Country</td>
                    <td>@emp.Gender</td>
                    <td>@emp.Village</td>
                    <td>@emp.Age</td>
                </tr>
            }
        </tbody>
    </table>
}
<br />
<br />
<br />
<h1> Add a new employee</h1>

<form>
    <div class="row">
        <div class="col-md-8">
            <div class="form-group">
                <label for="Name" class="control-label">Name</label>
                <input form="Name" class="form-control" @bind="employeeInfo.Name" />
            </div>
            <div class="form-group">
                <label for="Gender" class="control-label">Gender</label>
                <select class="form-select" aria-label="Default select example" @bind="employeeInfo.Gender">
                    <option value="">-Select Gender</option>
                    <option value="Male">Male</option>
                    <option value="Female">Female</option>
                </select>
            </div>
            <div class="form-group">
                <label for="Age" class="control-label">Age</label>
                <input form="Age" class="form-control" @bind="employeeInfo.Age" />
            </div>
            <div class="form-group">
                <label for="City" class="control-label">City</label>
                <input form="City" class="form-control" @bind="employeeInfo.City" />
            </div>
            <div class="form-group">
                <label for="Village" class="control-label">Village</label>
                <input form="Village" class="form-control" @bind="employeeInfo.Village" />
            </div>
            <div class="form-group">
                <label for="Country" class="control-label">Country</label>
                <input form="Country" class="form-control" @bind="employeeInfo.Country" />
            </div>



        </div>
    </div>
    <br />
    <div class="row">
        <div class="col-md-4">
            <div class="form-group">
                <input type="button" class="btn btn-primary" @onclick="@CreateEmployee" value="Save" />
                <input type="button" class="btn btn-primary" value="Cancel" />
            </div>
        </div>
    </div>
</form>
<form>
    <div class="row">
        <div class="col-md-8">
            <div class="form-group">
                <label for="School" class="control-label">School</label>
                <input form="School" class="form-control" @bind="education.School" />
            </div>


        </div>
    </div>
    <br />
    <div class="row">
        <div class="col-md-4">
            <div class="form-group">
                <input type="button" class="btn btn-primary" @onclick="@CreateEducation" value="Save" />
            </div>
        </div>
    </div>
</form>


@code {

    List<Employee> objEmp = new List<Employee>();


    protected override async Task OnInitializedAsync()
    {

        objEmp = await _employeeService.GetEmployee();
    }

    Employee employeeInfo = new Employee();
    Education education = new Education();


    protected async void CreateEmployee()
    {
        await _employeeService.Create(employeeInfo);
    }

    protected async void CreateEducation()
    {
        education.EmployeeId = 1;

        await _educationService.Create(education);
    }

}
